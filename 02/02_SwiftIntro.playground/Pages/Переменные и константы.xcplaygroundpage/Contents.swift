/*: # –í–≤–µ–¥–µ–Ω–∏–µ –≤ swift
## –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ. –ü—Ä–æ—Å—Ç—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è.

`let` —Å–æ–∑–¥–∞—ë—Ç –∫–æ–Ω—Å—Ç–∞–Ω—Ç—É, `var` —Å–æ–∑–¥–∞—ë—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

*/
let thisIsConstant = "const"
var thisIsVariable = "var"

//: –ó–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–æ–∂–Ω–æ –º–µ–Ω—è—Ç—å –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º, –∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –∑–∞–¥–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ–¥–∏–Ω–æ–∂–¥—ã ‚Äî –≤ –º–æ–º–µ–Ω—Ç –ø—Ä–∏—Å–≤–∞–∏–≤–∞–Ω–∏—è.
thisIsVariable = "some new value"
//thisIsConstant = "–µ—Å–ª–∏ –Ω–µ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å, —Ç–æ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞" // –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É

//: –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–º –º–æ–∂–Ω–æ –ø—Ä–∏—Å–≤–∞–∏–≤–∞—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Ç–æ–≥–æ –∂–µ —Ç–∏–ø–∞, —á—Ç–æ –∏ —Å–∞–º–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è.
//thisIsVariable = 42 // –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç, –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É
thisIsVariable = String(42) // –∞ –≤–æ—Ç —Ç–∞–∫ —Å—Ä–∞–±–æ—Ç–∞–µ—Ç

//: –ü—Ä–∏ –∑–∞–¥–∞–Ω–∏–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –µ—ë —Ç–∏–ø –±—É–¥–µ—Ç –∏–ª–∏ –≤—ã–≤–µ–¥–µ–Ω –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä–æ–º, –∏–ª–∏ –µ–≥–æ –º–æ–∂–Ω–æ –∑–∞–¥–∞—Ç—å —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ, –≤–æ—Ç —Ç–∞–∫:
let thisIsExplixitlyTypedVar: Float = 42
//: –í —ç—Ç–æ–º —Å–ª—É—á–∞–µ –ø—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–∏–≤–µ–¥–µ–Ω–æ –∫ —Ç–∏–ø—É –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π

//: ## –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö
//: ### –°—Ç—Ä–æ–∫–∏ –∏ —Å–∏–º–≤–æ–ª—ã

let oneLineString = "–≠—Ç–æ —Å—Ç—Ä–æ–∫–∞"

//: –°—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –∑–∞–¥–∞–≤–∞—Ç—å –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫
let multilineString = """
–≠—Ç–æ —Å—Ç—Ä–æ–∫–∞
"""

//: –≠—Ç–∏ —Ñ–æ—Ä–º—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã, —Å–º–æ—Ç—Ä–∏—Ç–µ
oneLineString == multilineString

//: –ú–Ω–æ–≥–æ—Å—Ç—Ä–æ—á–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –ø–µ—Ä–µ–Ω–æ—Å–∏—Ç—å –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞, –≤–æ—Ç —Ç–∞–∫:
let wrappedMultilineString = """
–≠—Ç–æ \
—Å—Ç—Ä–æ–∫–∞
"""
oneLineString == wrappedMultilineString

//: –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç—Ä–æ–∫–∞—Ö –Ω–∞–¥–æ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞—Ç—å. `\\` —ç—Ç–æ `\`, `\"` —ç—Ç–æ `"`, `\n` ‚Äî –ø–µ—Ä–µ–≤–æ–¥ —Å—Ç—Ä–æ–∫–∏, `\t` ‚Äî —Ç–∞–±—É–ª—è—Ü–∏—è –∏ —Ç.–¥.
//:
//: –í —Å—Ç—Ä–æ–∫–∏ –º–æ–∂–Ω–æ –ø–æ–¥—Å—Ç–∞–≤–ª—è—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è, –≤–æ—Ç —Ç–∞–∫:
let insideValue = "–≤–Ω—É—Ç—Ä–∏"
print("–æ–Ω–æ –æ–∫–∞–∂–µ—Ç—Å—è \(insideValue)")
// "–æ–Ω–æ –æ–∫–∞–∂–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏"
//:
//: –°—Ç—Ä–æ–∫–∏ —Å–æ—Å—Ç–æ—è—Ç –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤. –ü–æ –Ω–∏–º –º–æ–∂–Ω–æ –∏—Ç–µ—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–º `for..in` —Ü–∏–∫–ª–æ–º, –≤–æ—Ç —Ç–∞–∫

for character in "–ü—ë—Å!üê∂" {
    print(character)
}

// –ü
// —ë
// —Å
// !
// üê∂

//: –¢–∞–∫ –∂–µ —Å—Ç—Ä–æ–∫—É –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏–∑ –º–∞—Å—Å–∏–≤–∞ —Å–∏–º–≤–æ–ª–æ–≤, –≤–æ—Ç —Ç–∞–∫
let catCharacters: [Character] = ["–ö", "–æ", "—Ç", "!", "üê±"]
let catString = String(catCharacters)
print(catString)
// –í—ã–≤–µ–¥–µ—Ç "–ö–æ—Ç!üê±"

//: –°—Ç—Ä–æ–∫—É –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞ —Ç–æ, –ø—É—Å—Ç–∞—è –ª–∏ –æ–Ω–∞ –≤–æ—Ç —Ç–∞–∫
print(catString.isEmpty)

//: –ò —É–∑–Ω–∞—Ç—å, —Å–∫–æ–ª—å–∫–æ –≤ –Ω–µ–π —Å–∏–º–≤–æ–ª–æ–≤ –≤–æ—Ç —Ç–∞–∫
print(catString.count)

//: –í–∞–∂–Ω–æ –ø–æ–Ω–∏–º–∞—Ç—å, —á—Ç–æ `count` –≤—ã–≤–æ–¥–∏—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ unicode —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å—Ç—Ä–æ–∫–µ, —Ç–æ –µ—Å—Ç—å –µ—Å–ª–∏ –∫ —Å—Ç—Ä–æ–∫–µ –¥–æ–±–∞–≤–∏—Ç—å —Å–∏–º–≤–æ–ª-–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä, —Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–µ–π –Ω–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è
var word = "cafe"
print("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ \(word) = \(word.count)")
// Prints "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ cafe = 4"

word += "\u{301}"    // COMBINING ACUTE ACCENT, U+0301

print("–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ \(word) = \(word.count)")
// Prints "–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –≤ cafeÃÅ = 4"

//: ### –ß–∏—Å–ª–∞
//: –° —á–∏—Å–ª–∞–º–∏ –≤—Å—ë –ø—Ä–æ—â–µ ‚Äî —É –Ω–∞—Å –µ—Å—Ç—å —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞
let integerVariable = 100000
//: –î—Ä–æ–±–Ω—ã–µ —á–∏—Å–ª–∞
let floatValue: Float = 42
let doubleValue: Double = 42
//: –ë—É–ª–µ–≤—ã –∑–Ω–∞—á–µ–Ω–∏—è
let boolValue = true
//: –ü—Ä–∏ –∑–∞–ø–∏—Å–∏ —á–∏—Å–ª–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –º–æ–∂–Ω–æ —Ä–∞–∑–¥–µ–ª—è—Ç—å –Ω–∞ –±–ª–æ–∫–∏ —Ü–∏—Ñ—Ä, –≤–æ—Ç —Ç–∞–∫
let separatedLongInteger = 1_000_000_000
//: –¢–∞–∫ –∂–µ —á–∏—Å–ª–∞ –º–æ–∂–Ω–æ –∑–∞–ø–∏—Å—ã–≤–∞—Ç—å –≤ —Ä–∞–∑–Ω—ã—Ö —Å–∏—Å—Ç–µ–º–∞—Ö —Å—á–∏—Å–ª–µ–Ω–∏—è
let hexInteger = 0xDEADBEEF
let octoInteger = 0o776655
let binaryInteger = 0b1101001000111

